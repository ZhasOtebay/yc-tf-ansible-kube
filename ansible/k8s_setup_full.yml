---
- name: Install Kubernetes on Ubuntu 22.04
  hosts: all
  become: yes

  tasks:
    # 1. Install Required Packages
    - name: Install required packages
      apt:
        name:
          - curl
          - gnupg2
          - software-properties-common
          - apt-transport-https
          - ca-certificates
          - socat  # Added socat here
        state: present
        update_cache: yes

    # 2. Install Docker
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: yes

    - name: Start Docker
      systemd:
        name: docker
        state: started
        enabled: yes

    # 3. Add user to docker group
    - name: Add user to docker group
      user:
        name: "{{ ansible_ssh_user }}"
        group: docker
        append: yes

    # 4. Remove Existing Directories (if they exist)
    - name: Remove Keyrings Directory (if it exists)
      ansible.builtin.shell: rm -rf /etc/apt/keyrings

    - name: Remove Existing Kubernetes Directory (if it exists)
      ansible.builtin.shell: rm -rf /etc/apt/sources.list.d/pkgs_k8s_io_core_stable_v1_30_deb.list

    # 5. Disable Swap
    - name: Disable swap
      ansible.builtin.command: swapoff -a

    - name: Ensure swap is disabled on boot
      ansible.builtin.command: sudo sed -i -e '/\/swap.img\s\+none\s\+swap\s\+sw\s\+0\s\+0/s/^/#/' /etc/fstab

    # 6. Load Kernel Parameters
    - name: Load kernel parameters for Containerd
      ansible.builtin.copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter

    - name: Load kernel parameters for Kubernetes
      ansible.builtin.copy:
        dest: /etc/sysctl.d/kubernetes.conf
        content: |
          net.bridge.bridge-nf-call-ip6tables = 1
          net.bridge.bridge-nf-call-iptables = 1
          net.ipv4.ip_forward = 1

    - name: Reload Parameter Changes
      ansible.builtin.command: sudo sysctl --system

    # 7. Configure Containerd
    - name: Configuring Containerd (building the configuration file)
      ansible.builtin.command: sudo sh -c "containerd config default > /opt/containerd/config.toml"

    - name: Configuring Containerd (Setting SystemdCgroup Variable to True)
      ansible.builtin.command: sudo sed -i 's/SystemdCgroup = false/SystemdCgroup = true/' /opt/containerd/config.toml

    - name: Reload systemd configuration
      ansible.builtin.command: systemctl daemon-reload

    - name: Restart containerd service
      ansible.builtin.service:
        name: containerd
        state: restarted

    # 8. Add Kubernetes Repository
    - name: Create directory for APT keys
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: Download Kubernetes GPG key securely
      ansible.builtin.shell: curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: Add Kubernetes repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /"
        state: present

    - name: Install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Hold kubelet, kubeadm, kubectl packages
      ansible.builtin.command: sudo apt-mark hold kubelet kubeadm kubectl

    # 9. Configure Kubelet
    - name: Replace /etc/default/kubelet contents
      ansible.builtin.copy:
        dest: /etc/default/kubelet
        content: 'KUBELET_EXTRA_ARGS="--cgroup-driver=cgroupfs"'

    - name: Reload systemd configuration
      ansible.builtin.command: systemctl daemon-reload

    - name: Restart kubelet service
      ansible.builtin.service:
        name: kubelet
        state: restarted

    # 10. Reboot the System
    - name: Reboot the system
      ansible.builtin.reboot:
        msg: "Reboot initiated by Ansible for Kubernetes setup"
        reboot_timeout: 150

    # 11. Configure Docker
    - name: Replace Docker daemon.json configuration
      ansible.builtin.copy:
        dest: /etc/docker/daemon.json
        content: |
          {
            "exec-opts": ["native.cgroupdriver=systemd"],
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "100m"
            },
            "storage-driver": "overlay2"
          }

    - name: Reload systemd configuration
      ansible.builtin.command: systemctl daemon-reload

    - name: Restart Docker service
      ansible.builtin.service:
        name: docker
        state: restarted

